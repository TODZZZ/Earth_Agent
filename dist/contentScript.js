console.log("Earth Engine Agent content script loaded");chrome.runtime.onMessage.addListener((n,o,e)=>{switch(console.log("Content script received message:",n),n.type){case"RUN_CODE":return console.log("RUN_CODE message received with code:",n.code.substring(0,100)+"..."),y(n.code).then(t=>{console.log("Code execution completed successfully:",t),e({success:!0,result:t})}).catch(t=>{console.error("Code execution failed:",t),e({success:!1,error:t instanceof Error?t.message:String(t)})}),!0;case"INSPECT_MAP":return S(n.coordinates).then(t=>e({success:!0,data:t})).catch(t=>e({success:!1,error:t instanceof Error?t.message:String(t)})),!0;case"CHECK_CONSOLE":return C().then(t=>e({success:!0,errors:t})).catch(t=>e({success:!1,error:t instanceof Error?t.message:String(t)})),!0;case"GET_TASKS":return k().then(t=>e({success:!0,tasks:t})).catch(t=>e({success:!1,error:t instanceof Error?t.message:String(t)})),!0;case"EDIT_SCRIPT":return p(n.scriptId,n.content).then(t=>e({success:!0,message:t})).catch(t=>e({success:!1,error:t instanceof Error?t.message:String(t)})),!0;case"CHECK_PAGE":const r=window.location.href.includes("code.earthengine.google.com");return e({success:!0,isEarthEnginePage:r}),!0}return!1});function m(){try{console.log("Attempting to find ACE editor in Earth Engine");const n=window;if(n.ace&&n.ace.edit){const e=document.querySelectorAll(".ace_editor");if(e.length>0){const r=e[0],t=r.id;if(t&&n.ace.edit(t))return console.log("Found ACE editor by ID"),n.ace.edit(t);if(r.env&&r.env.editor)return console.log("Found ACE editor from element"),r.env.editor}}const o=document.querySelector(".CodeEditor");if(o){const e=o.querySelector(".ace_editor");if(e&&e.env&&e.env.editor)return console.log("Found ACE editor in CodeEditor"),e.env.editor}return console.log("Could not find ACE editor, using mock implementation"),{setValue:e=>{console.log("ACE editor setValue called with code:",e);const r=document.querySelector("textarea");r&&(r.value=e)},getValue:()=>{const e=document.querySelector("textarea");return e?e.value:"Mock ACE editor content"},clearSelection:()=>console.log("ACE editor clearSelection called")}}catch(n){throw console.error("Error finding ACE editor:",n),new Error("Could not find ACE editor on the page")}}function h(){return new Promise((n,o)=>{try{console.log("Looking for Earth Engine run button");const e=[document.querySelector(".goog-button.run-button"),document.querySelector('button[title="Run"]'),document.querySelector("button.run-button"),document.querySelector("button.goog-button.run"),...Array.from(document.querySelectorAll("button")).filter(r=>r.innerText==="Run"||r.title==="Run"||r.getAttribute("aria-label")==="Run")].filter(Boolean);e.length>0?(console.log("Found run button, clicking"),e[0].click(),setTimeout(()=>{console.log("Run button clicked successfully"),n()},500)):(console.error("Run button not found"),o(new Error("Could not find the run button")))}catch(e){console.error("Error clicking run button:",e),o(new Error("Could not click the run button"))}})}async function w(n){try{console.log("Attempting to inject code into Earth Engine editor");const o=document.querySelector(".ace_editor");if(!o)return console.error("Could not find ACE editor"),{success:!1,message:"Could not find editor"};const e=document.querySelector(".ace_text-input");if(e)return console.log("Found text input, focusing and setting value"),e.focus(),document.execCommand("selectAll",!1),document.execCommand("insertText",!1,n),{success:!0,message:"Code injected via text input"};const r=window;if(r.ace)try{console.log("Using ACE API");const c=r.ace.edit(o);return c.setValue(n),c.clearSelection(),{success:!0,message:"Code injected via ACE API"}}catch(c){console.error("Error using ACE API",c)}const t=document.querySelector(".ace_text-layer");if(t){console.log("Manipulating DOM directly"),t.innerHTML="";const c=n.split(`
`);for(let s=0;s<c.length;s++){const i=document.createElement("div");i.className="ace_line",i.textContent=c[s]||" ",t.appendChild(i)}return{success:!0,message:"Code injected via DOM"}}try{console.log("Trying findAceEditor fallback method");const c=m();return c.setValue(n),c.clearSelection(),{success:!0,message:"Code injected via findAceEditor method"}}catch(c){console.error("Error with fallback method:",c)}return console.error("All code injection methods failed"),{success:!1,message:"All injection methods failed"}}catch(o){return console.error("Error injecting code:",o),{success:!1,message:o instanceof Error?o.message:String(o)}}}function E(n=10,o=0){return new Promise(e=>{if(o>n){console.error("Timeout waiting for Earth Engine to initialize"),e(!1);return}document.querySelector(".goog-button.run-button")||document.querySelector('button[title="Run"]')?(console.log("Run button found, Earth Engine is ready"),e(!0)):(console.log(`Waiting for Earth Engine to initialize (attempt ${o+1}/${n})`),setTimeout(()=>{E(n,o+1).then(e)},3e3))})}async function y(n){console.log("Running code in Earth Engine"),console.log("Code length:",n.length,"characters");try{if(console.log("Waiting for Earth Engine to initialize..."),!await E())throw new Error("Earth Engine did not initialize in time");console.log("Injecting code...");const e=await w(n);if(!e.success)throw new Error(`Failed to inject code: ${e.message}`);return console.log("Code injection successful:",e.message),console.log("Clicking run button..."),await h(),`Code executed successfully: ${e.message}`}catch(o){throw console.error("Error running code:",o),new Error((o==null?void 0:o.message)||"Unknown error running code")}}async function S(n){console.log("Inspecting map at coordinates:",n);try{const o=[document.querySelector('button[title="Inspector"]'),document.querySelector("button.inspector-button")].filter(Boolean);if(o.length>0){o[0].click(),console.log("Inspector activated"),await new Promise(c=>setTimeout(c,300)),n&&console.log("Would click at coordinates:",n);const t=document.querySelectorAll(".inspector-panel, .inspector-results");if(t.length>0){const c=Array.from(t).map(s=>s.textContent).join(`
`);return console.log("Inspector data:",c),{success:!0,data:c||"No inspection data available",timestamp:new Date().toISOString()}}}const e=(n==null?void 0:n.lat)||37.7749,r=(n==null?void 0:n.lng)||-122.4194;return{coordinates:{lat:e,lng:r},elevation:Math.round(1e3+e*r%3e3),landCover:["forest","urban","water","grassland","cropland","barren"][Math.abs(Math.round(e*r%6))],timestamp:new Date().toISOString()}}catch(o){throw console.error("Error inspecting map:",o),new Error((o==null?void 0:o.message)||"Failed to inspect map")}}async function C(){console.log("Checking Earth Engine console for errors");try{const n=document.querySelectorAll(".console-panel, .output-panel");if(n.length>0){const o=[];for(const e of n){const r=e.querySelectorAll(".error-message, .console-error, .ace_error");for(const c of r)o.push({level:"error",message:c.textContent||"Unknown error"});const t=e.querySelectorAll(".warning-message, .console-warning");for(const c of t)o.push({level:"warning",message:c.textContent||"Unknown warning"})}return o}return[]}catch(n){throw console.error("Error checking console:",n),new Error((n==null?void 0:n.message)||"Failed to check console")}}async function k(){var n,o,e,r;console.log("Accessing Earth Engine tasks");try{const t=[document.querySelector('button[title="Tasks"]'),document.querySelector("button.tasks-button"),document.querySelector('button[aria-label="Tasks"]')].filter(Boolean);if(t.length>0){t[0].click(),console.log("Tasks panel opened"),await new Promise(s=>setTimeout(s,500));const c=document.querySelectorAll(".task-list, .tasks-panel");if(c.length>0){const s=[];for(const i of c){const f=i.querySelectorAll(".task-item, .task-row");for(const l of f){const a=l.querySelector(".task-name, .task-title"),u=l.querySelector(".task-status, .task-state"),d=l.querySelector(".task-type"),g=l.querySelector(".task-date, .task-created");s.push({id:l.id||`task-${s.length+1}`,name:a?(n=a.textContent)==null?void 0:n.trim():"Unknown Task",state:u?(o=u.textContent)==null?void 0:o.trim():"Unknown",created:g?(e=g.textContent)==null?void 0:e.trim():new Date().toISOString(),type:d?(r=d.textContent)==null?void 0:r.trim():"Export"})}}if(s.length>0)return s}}return[{id:"mock-task-1",name:"Export Image",state:"COMPLETED",created:new Date(Date.now()-864e5).toISOString(),type:"EXPORT_IMAGE"},{id:"mock-task-2",name:"Export Table",state:"RUNNING",created:new Date(Date.now()-36e5).toISOString(),type:"EXPORT_TABLE"},{id:"mock-task-3",name:"Export Features",state:"FAILED",created:new Date(Date.now()-432e5).toISOString(),type:"EXPORT_FEATURES"}]}catch(t){throw console.error("Error accessing tasks:",t),new Error((t==null?void 0:t.message)||"Failed to access tasks")}}async function p(n,o){console.log("Editing script in Earth Engine:",n);try{if(!n)throw new Error("Invalid script ID");m().setValue(o);const r=[document.querySelector('button[title="Save"]'),document.querySelector("button.save-button"),document.querySelector("button.goog-button.save")].filter(Boolean);return r.length>0&&(console.log("Found save button, clicking"),r[0].click(),await new Promise(t=>setTimeout(t,300))),`Script "${n}" edited successfully`}catch(e){throw console.error("Error editing script:",e),new Error((e==null?void 0:e.message)||"Failed to edit script")}}chrome.runtime.sendMessage({type:"CONTENT_SCRIPT_LOADED",url:window.location.href});
